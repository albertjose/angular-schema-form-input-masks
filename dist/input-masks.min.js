angular.module("schemaForm").run(["$templateCache",function(e){e.put("directives/decorators/bootstrap/input/fixed.html",'<div class="form-group schema-form-{{form.type}} {{form.htmlClass}}" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess(), \'has-feedback\': form.feedback !== false }"><label class="control-label {{form.labelHtmlClass}}" ng-class="{\'sr-only\': !showTitle()}" for="{{form.key.slice(-1)[0]}}">{{form.title}}</label><div ng-class="{\'input-group\': (form.fieldAddonLeft || form.fieldAddonRight)}"><span ng-if="form.fieldAddonLeft" class="input-group-addon" ng-bind-html="form.fieldAddonLeft"></span> <input ng-show="form.key" style="background-color: white" type="text" ui-number-mask="form.schema.decimals" ng-attr-ui-negative-number="{{form.negative}}" min="form.min" max="form.max" ng-attr-ui-hide-group-sep="{{form.separator}}" class="form-control {{form.fieldHtmlClass}}" schema-validate="form" ng-model="$$value$$" schema-form-numberhtml="" name="{{form.key.slice(-1)[0]}}"> <span ng-if="form.fieldAddonRight" class="input-group-addon" ng-bind-html="form.fieldAddonRight"></span></div><span ng-if="form.feedback !== false" class="form-control-feedback" ng-style="{\'padding-right\':form.fieldAddonRight?60:0+\'px\'}" ng-class="evalInScope(form.feedback) || {\'glyphicon\': true, \'glyphicon-ok\': hasSuccess(), \'glyphicon-remove\': hasError() }" aria-hidden="true"></span> <span class="help-block">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span></div>')}]),angular.module("schemaForm").config(["schemaFormProvider","schemaFormDecoratorsProvider","sfPathProvider",function(e,r,o){function a(r,a,t){if(s.indexOf(a.format)>-1){var n=e.stdFormObj(r,a,t);return n.key=t.path,n.type=a.format,t.lookup[o.stringify(t.path)]=n,n}}var s=["fixed","postal","money","ie","phone","percentage","cpf","cnpj"];e.defaults.number.unshift(a),e.defaults.string.unshift(a),e.defaults.integer.unshift(a),s.forEach(function(e){r.addMapping("bootstrapDecorator",e,"directives/decorators/bootstrap/input/"+e+".html"),r.createDirective(e,"directives/decorators/bootstrap/input/"+e+".html")})}]);